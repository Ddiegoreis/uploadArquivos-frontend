{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documentos/www/uploadArquivos/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { uniqueId } from 'lodash';\nimport FileSize from 'filesize';\nimport api from './services/api';\nimport GlobalStyles from './styles/global';\nimport { Container, Content } from './styles';\nimport Upload from './components/Upload';\nimport FileList from './components/FileList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  const handleUpload = files => {\n    const uploadedFile = files.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      readableSize: FileSize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false,\n      url: null\n    }));\n    setUploadedFiles(uploadedFiles.concat(uploadedFile));\n    uploadedFiles.forEach(processUpload);\n  };\n\n  const processUpload = uploadedFile => {\n    const data = new FormData();\n    data.append('file', uploadedFile.file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        onUpload: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), !!uploadedFiles.length && /*#__PURE__*/_jsxDEV(FileList, {\n        files: uploadedFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"+65XWmZ3IQzrOB7vdBp7tbCqjTw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/diego/Documentos/www/uploadArquivos/frontend/src/App.js"],"names":["useState","uniqueId","FileSize","api","GlobalStyles","Container","Content","Upload","FileList","App","uploadedFiles","setUploadedFiles","handleUpload","files","uploadedFile","map","file","id","name","readableSize","size","preview","URL","createObjectURL","progress","uploaded","error","url","concat","forEach","processUpload","data","FormData","append","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,UAAnC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC/B,UAAMC,YAAY,GAAGD,KAAK,CAACE,GAAN,CAAWC,IAAD,KAAW;AACzCA,MAAAA,IADyC;AAEzCC,MAAAA,EAAE,EAAEhB,QAAQ,EAF6B;AAGzCiB,MAAAA,IAAI,EAAEF,IAAI,CAACE,IAH8B;AAIzCC,MAAAA,YAAY,EAAEjB,QAAQ,CAACc,IAAI,CAACI,IAAN,CAJmB;AAKzCC,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBP,IAApB,CALgC;AAMzCQ,MAAAA,QAAQ,EAAE,CAN+B;AAOzCC,MAAAA,QAAQ,EAAE,KAP+B;AAQzCC,MAAAA,KAAK,EAAE,KARkC;AASzCC,MAAAA,GAAG,EAAE;AAToC,KAAX,CAAV,CAArB;AAYAhB,IAAAA,gBAAgB,CAACD,aAAa,CAACkB,MAAd,CAAqBd,YAArB,CAAD,CAAhB;AAEAJ,IAAAA,aAAa,CAACmB,OAAd,CAAsBC,aAAtB;AACA,GAhBD;;AAkBA,QAAMA,aAAa,GAAIhB,YAAD,IAAkB;AACvC,UAAMiB,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBnB,YAAY,CAACE,IAAjC;AACA,GAJD;;AAMA,sBACC,QAAC,SAAD;AAAA,4BACC,QAAC,OAAD;AAAA,8BACC,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,cADD,EAEE,CAAC,CAACF,aAAa,CAACwB,MAAhB,iBACA,QAAC,QAAD;AAAU,QAAA,KAAK,EAAExB;AAAjB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAOC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GAtCQD,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport { uniqueId } from 'lodash'\nimport FileSize from 'filesize'\n\nimport api from './services/api'\n\nimport GlobalStyles from './styles/global'\nimport { Container, Content } from './styles'\n\nimport Upload from './components/Upload'\nimport FileList from './components/FileList'\n\nfunction App() {\n\tconst [uploadedFiles, setUploadedFiles] = useState([])\n\n\tconst handleUpload = (files) => {\n\t\tconst uploadedFile = files.map((file) => ({\n\t\t\tfile,\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\treadableSize: FileSize(file.size),\n\t\t\tpreview: URL.createObjectURL(file),\n\t\t\tprogress: 0,\n\t\t\tuploaded: false,\n\t\t\terror: false,\n\t\t\turl: null,\n\t\t}))\n\n\t\tsetUploadedFiles(uploadedFiles.concat(uploadedFile))\n\n\t\tuploadedFiles.forEach(processUpload)\n\t}\n\n\tconst processUpload = (uploadedFile) => {\n\t\tconst data = new FormData()\n\n\t\tdata.append('file', uploadedFile.file)\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Content>\n\t\t\t\t<Upload onUpload={handleUpload} />\n\t\t\t\t{!!uploadedFiles.length && (\n\t\t\t\t\t<FileList files={uploadedFiles} />\n\t\t\t\t)}\n\t\t\t</Content>\n\t\t\t<GlobalStyles />\n\t\t</Container>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}