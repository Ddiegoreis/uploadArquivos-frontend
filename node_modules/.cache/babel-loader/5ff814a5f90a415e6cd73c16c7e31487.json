{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documentos/www/uploadArquivos/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { uniqueId } from 'lodash';\nimport FileSize from 'filesize';\nimport api from './services/api';\nimport GlobalStyles from './styles/global';\nimport { Container, Content } from './styles';\nimport Upload from './components/Upload';\nimport FileList from './components/FileList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  const handleUpload = files => {\n    const uploadedFile = files.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      readableSize: FileSize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false,\n      url: null\n    }));\n    setUploadedFiles({\n      uploadedFiles: uploadedFile.concat(uploadedFiles)\n    });\n    uploadedFile.forEach(this.processUpload);\n  };\n\n  const updateFiles = (id, data) => {\n    setUploadedFiles({\n      updateFile: updateFiles.map(file => {\n        return id === file.id ? { ...file,\n          ...data\n        } : file;\n      })\n    });\n  };\n\n  const processUpload = uploadedFile => {\n    const data = new FormData();\n    data.append('file', uploadedFile.file, uploadedFile.name);\n    api.post('posts', data, {\n      onUploadProgress: e => {\n        const progress = parseInt(Math.round(e.loaded * 100 / e.total));\n        updateFiles(uploadedFile.id, {\n          progress\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        onUpload: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), !!uploadedFiles.length && /*#__PURE__*/_jsxDEV(FileList, {\n        files: uploadedFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"+65XWmZ3IQzrOB7vdBp7tbCqjTw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/diego/Documentos/www/uploadArquivos/frontend/src/App.js"],"names":["useState","uniqueId","FileSize","api","GlobalStyles","Container","Content","Upload","FileList","App","uploadedFiles","setUploadedFiles","handleUpload","files","uploadedFile","map","file","id","name","readableSize","size","preview","URL","createObjectURL","progress","uploaded","error","url","concat","forEach","processUpload","updateFiles","data","updateFile","FormData","append","post","onUploadProgress","e","parseInt","Math","round","loaded","total","length"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { uniqueId } from 'lodash'\nimport FileSize from 'filesize'\n\nimport api from './services/api'\n\nimport GlobalStyles from './styles/global'\nimport { Container, Content } from './styles'\n\nimport Upload from './components/Upload'\nimport FileList from './components/FileList'\n\nfunction App() {\n\tconst [uploadedFiles, setUploadedFiles] = useState([])\n\n\tconst handleUpload = (files) => {\n\t\tconst uploadedFile = files.map((file) => ({\n\t\t\tfile,\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\treadableSize: FileSize(file.size),\n\t\t\tpreview: URL.createObjectURL(file),\n\t\t\tprogress: 0,\n\t\t\tuploaded: false,\n\t\t\terror: false,\n\t\t\turl: null,\n\t\t}))\n\n\t\tsetUploadedFiles({\n\t\t\tuploadedFiles: uploadedFile.concat(uploadedFiles)\n\t\t})\n\t  \n\t\tuploadedFile.forEach(this.processUpload);\n\t}\n\n\tconst updateFiles = (id, data) => {\n\t\tsetUploadedFiles({\n\t\t\tupdateFile: updateFiles.map((file) => {\n\t\t\t\treturn id === file.id\n\t\t\t\t\t? { ...file, ...data }\n\t\t\t\t\t: file\n\t\t\t}),\n\t\t})\n\t}\n\n\tconst processUpload = (uploadedFile) => {\n\t\tconst data = new FormData()\n\n\t\tdata.append('file', uploadedFile.file, uploadedFile.name)\n\n\t\tapi.post('posts', data, {\n\t\t\tonUploadProgress: (e) => {\n\t\t\t\tconst progress = parseInt(\n\t\t\t\t\tMath.round((e.loaded * 100) / e.total)\n\t\t\t\t)\n\n\t\t\t\tupdateFiles(uploadedFile.id, {\n\t\t\t\t\tprogress,\n\t\t\t\t})\n\t\t\t},\n\t\t})\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Content>\n\t\t\t\t<Upload onUpload={handleUpload} />\n\t\t\t\t{!!uploadedFiles.length && (\n\t\t\t\t\t<FileList files={uploadedFiles} />\n\t\t\t\t)}\n\t\t\t</Content>\n\t\t\t<GlobalStyles />\n\t\t</Container>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}