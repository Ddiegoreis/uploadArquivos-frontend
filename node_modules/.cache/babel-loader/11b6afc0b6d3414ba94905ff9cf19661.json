{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documentos/www/uploadArquivos/frontend/src/components/Upload/index.js\";\nimport Dropzone from 'react-dropzone';\nimport { DropContainer, UploadMessage } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = ({\n  onUpload\n}) => {\n  function renderDragMessage(isDragActive, isDragReject) {\n    if (!isDragActive) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Arraste arquivos aqui...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (isDragReject) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        type: \"error\",\n        children: \"Arquivo n\\xE3o suportado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      type: \"success\",\n      children: \"Solte os arquivos aqui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dropzone, {\n    accept: \"image/*\",\n    onDropAccepted: onUpload,\n    children: ({\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isDragReject\n    }) => /*#__PURE__*/_jsxDEV(DropContainer, { ...getRootProps(),\n      isDragActive: isDragActive,\n      isDragReject: isDragReject,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), renderDragMessage(isDragActive, isDragReject)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/diego/Documentos/www/uploadArquivos/frontend/src/components/Upload/index.js"],"names":["Dropzone","DropContainer","UploadMessage","Upload","onUpload","renderDragMessage","isDragActive","isDragReject","getRootProps","getInputProps"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,gBAArB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,UAA7C;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+B;AAC5C,WAASC,iBAAT,CAA2BC,YAA3B,EAAkDC,YAAlD,EAAyE;AACvE,QAAI,CAACD,YAAL,EAAmB;AACjB,0BAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,QAAIC,YAAJ,EAAkB;AAChB,0BAAO,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBAAO,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAC,SAAjB;AAA2B,IAAA,cAAc,EAAEH,QAA3C;AAAA,cACG,CAAC;AAAEI,MAAAA,YAAF;AAAgBC,MAAAA,aAAhB;AAA+BH,MAAAA,YAA/B;AAA6CC,MAAAA;AAA7C,KAAD,kBACC,QAAC,aAAD,OACMC,YAAY,EADlB;AAEE,MAAA,YAAY,EAAEF,YAFhB;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAAA,8BAKE,sBAAWE,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cALF,EAMGJ,iBAAiB,CAACC,YAAD,EAAeC,YAAf,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3BD;;KAAMJ,M;AA6BN,eAAeA,MAAf","sourcesContent":["import Dropzone from 'react-dropzone';\n\nimport { DropContainer, UploadMessage } from './styles';\n\n\nconst Upload = ({ onUpload }: UploadProps) => {\n  function renderDragMessage(isDragActive: boolean, isDragReject: boolean) {\n    if (!isDragActive) {\n      return <UploadMessage>Arraste arquivos aqui...</UploadMessage>;\n    }\n\n    if (isDragReject) {\n      return <UploadMessage type=\"error\">Arquivo n√£o suportado</UploadMessage>;\n    }\n\n    return <UploadMessage type=\"success\">Solte os arquivos aqui</UploadMessage>;\n  }\n\n  return (\n    <Dropzone accept=\"image/*\" onDropAccepted={onUpload}>\n      {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n        <DropContainer\n          {...getRootProps()}\n          isDragActive={isDragActive}\n          isDragReject={isDragReject}\n        >\n          <input {...getInputProps()} />\n          {renderDragMessage(isDragActive, isDragReject)}\n        </DropContainer>\n      )}\n    </Dropzone>\n  )\n}\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}