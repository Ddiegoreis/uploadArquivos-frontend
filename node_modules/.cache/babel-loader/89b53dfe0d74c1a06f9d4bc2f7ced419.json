{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documentos/www/uploadArquivos/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { uniqueId } from 'lodash';\nimport FileSize from 'filesize';\nimport api from './services/api';\nimport GlobalStyles from './styles/global';\nimport { Container, Content } from './styles';\nimport Upload from './components/Upload';\nimport FileList from './components/FileList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  const handleUpload = files => {\n    const uploadedFile = files.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      readableSize: FileSize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      error: false,\n      url: null\n    }));\n    setUploadedFiles(uploadedFiles.concat(uploadedFile));\n  };\n\n  updateFile = (id, data) => {\n    this.setState({\n      uploadedFiles: this.state.uploadedFiles.map(uploadedFile => {\n        return id === uploadedFile.id ? { ...uploadedFile,\n          ...data\n        } : uploadedFile;\n      })\n    });\n  };\n\n  processUpload = uploadedFile => {\n    const data = new FormData();\n    data.append(\"file\", uploadedFile.file, uploadedFile.name);\n    api.post(\"posts\", data, {\n      onUploadProgress: e => {\n        const progress = parseInt(Math.round(e.loaded * 100 / e.total));\n        this.updateFile(uploadedFile.id, {\n          progress\n        });\n      }\n    }).then(response => {\n      this.updateFile(uploadedFile.id, {\n        uploaded: true,\n        id: response.data._id,\n        url: response.data.url\n      });\n    }).catch(() => {\n      this.updateFile(uploadedFile.id, {\n        error: true\n      });\n    });\n  };\n\n  handleDelete = async id => {\n    await api.delete(`posts/${id}`);\n    this.setState({\n      uploadedFiles: this.state.uploadedFiles.filter(file => file.id !== id)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        onUpload: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), !!uploadedFiles.length && /*#__PURE__*/_jsxDEV(FileList, {\n        files: uploadedFiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"+65XWmZ3IQzrOB7vdBp7tbCqjTw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/diego/Documentos/www/uploadArquivos/frontend/src/App.js"],"names":["useState","useEffect","uniqueId","FileSize","api","GlobalStyles","Container","Content","Upload","FileList","App","uploadedFiles","setUploadedFiles","handleUpload","files","uploadedFile","map","file","id","name","readableSize","size","preview","URL","createObjectURL","progress","uploaded","error","url","concat","updateFile","data","setState","state","processUpload","FormData","append","post","onUploadProgress","e","parseInt","Math","round","loaded","total","then","response","_id","catch","handleDelete","delete","filter","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { uniqueId } from 'lodash'\nimport FileSize from 'filesize'\n\nimport api from './services/api'\n\nimport GlobalStyles from './styles/global'\nimport { Container, Content } from './styles'\n\nimport Upload from './components/Upload'\nimport FileList from './components/FileList'\n\nfunction App() {\n\tconst [uploadedFiles, setUploadedFiles] = useState([])\n\n\tconst handleUpload = (files) => {\n\t\tconst uploadedFile = files.map((file) => ({\n\t\t\tfile,\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\treadableSize: FileSize(file.size),\n\t\t\tpreview: URL.createObjectURL(file),\n\t\t\tprogress: 0,\n\t\t\tuploaded: false,\n\t\t\terror: false,\n\t\t\turl: null,\n\t\t}))\n\n\t\tsetUploadedFiles(uploadedFiles.concat(uploadedFile))\n\t}\n\n\tupdateFile = (id, data) => {\n\t\tthis.setState({\n\t\t  uploadedFiles: this.state.uploadedFiles.map(uploadedFile => {\n\t\t\treturn id === uploadedFile.id\n\t\t\t  ? { ...uploadedFile, ...data }\n\t\t\t  : uploadedFile;\n\t\t  })\n\t\t});\n\t  };\n\t\n\t  processUpload = uploadedFile => {\n\t\tconst data = new FormData();\n\t\n\t\tdata.append(\"file\", uploadedFile.file, uploadedFile.name);\n\t\n\t\tapi\n\t\t  .post(\"posts\", data, {\n\t\t\tonUploadProgress: e => {\n\t\t\t  const progress = parseInt(Math.round((e.loaded * 100) / e.total));\n\t\n\t\t\t  this.updateFile(uploadedFile.id, {\n\t\t\t\tprogress\n\t\t\t  });\n\t\t\t}\n\t\t  })\n\t\t  .then(response => {\n\t\t\tthis.updateFile(uploadedFile.id, {\n\t\t\t  uploaded: true,\n\t\t\t  id: response.data._id,\n\t\t\t  url: response.data.url\n\t\t\t});\n\t\t  })\n\t\t  .catch(() => {\n\t\t\tthis.updateFile(uploadedFile.id, {\n\t\t\t  error: true\n\t\t\t});\n\t\t  });\n\t  };\n\t\n\t  handleDelete = async id => {\n\t\tawait api.delete(`posts/${id}`);\n\t\n\t\tthis.setState({\n\t\t  uploadedFiles: this.state.uploadedFiles.filter(file => file.id !== id)\n\t\t});\n\t  };\n\n\treturn (\n\t\t<Container>\n\t\t\t<Content>\n\t\t\t\t<Upload onUpload={handleUpload} />\n\t\t\t\t{!!uploadedFiles.length && (\n\t\t\t\t\t<FileList files={uploadedFiles} />\n\t\t\t\t)}\n\t\t\t</Content>\n\t\t\t<GlobalStyles />\n\t\t</Container>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}